DROP TABLE identity_test_tab PURGE;

CREATE TABLE identity_test_tab (
  id          NUMBER GENERATED BY DEFAULT AS IDENTITY,
  description VARCHAR2(30)
);

INSERT INTO identity_test_tab (description) VALUES ('Just DESCRIPTION');
INSERT INTO identity_test_tab (id, description) VALUES (999, 'ID=999 and DESCRIPTION');
INSERT INTO identity_test_tab (id, description) VALUES (NULL, 'ID=NULL and DESCRIPTION');

SELECT * FROM identity_test_tab;

-- ChatGPT를 활용해 PL/SQL 패키지 만들기
-- (1) 테이블 생성 
DROP TABLE books PURGE;
CREATE TABLE books (
    id    NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    name  VARCHAR2(30),
    price NUMBER(10, 2)
);

-- 2. 위 테이블에 CRUD하는 stand-alone subprogram(stored procedure 및 stored function) 만들어줘
-- 1) Create 
  create or replace procedure insert_book (
    p_name  in varchar2,
    p_price in number)
  as
  begin
    insert into books (name, price)
    values (p_name, p_price);
  end insert_book;
  /
-- 2) read 
  create or replace function read_book_by_id (
    p_id in number
  )
    return sys_refcursor 
  as
    v_cursor sys_refcursor;
  begin
    open v_cursor for
      select name, price
      from books
      where id = p_id;

    return v_cursor;
  end read_book_by_id;
  /

-- 3) update 
  create or replace procedure update_book_by_id (
    p_id    in number,
    p_name  in varchar2, 
    p_price in number)
  as
  begin
    update books
    set name = p_name,
        price = p_price
    where id = p_id;
  end update_book_by_id;
  /

-- 4) delete 
  create or replace procedure delete_book_by_id (
    p_id in number
  )
  as
  begin
    delete from books
    where id = p_id;
  end delete_book_by_id;
  /

-- create 예시
select * from books;
begin
    insert_book('자바 입문', 10000);
    insert_book('데이터베이스 활용', 15000);
    commit;
end;
/ 
select * from books;
-- read 예시 
declare
    v_cursor sys_refcursor;
    v_name   varchar2(30);
    v_price  number(10, 2);
begin
    v_cursor := read_book_by_id(1);
    fetch v_cursor into v_name, v_price;
    dbms_output.put_line('Name: ' || v_name || ', Price: ' || v_price);
    close v_cursor;
end;
/
select * from books;
-- update 예시 
begin
    update_book_by_id(1, '자바 입문', 12000);
    commit;
end;
/
select * from books;
-- delete 예시 
begin
    delete_book_by_id(1);
    commit;
end;
/
select * from books;


-------------  3.  위 테이블에 CRUD하는 패키지 만들어줘 ---------------


  create or replace package pack_books
  is
    procedure insert_book (
      p_name  in varchar2,
      p_price in number);

    function read_book_by_id (
      p_id in number
    )
      return sys_refcursor;

    procedure update_book_by_id (
      p_id    in number,
      p_name  in varchar2, 
      p_price in number);

    procedure delete_book_by_id (
      p_id in number
    );
  end pack_books;
  /

  create or replace package body pack_books
  is

    function price_check(
      p_price in number
    ) 
      return varchar2
    is
    begin
      if p_price >= 0 then
        return 'True';
      else
        return 'False';
      end if; 
    end;

    procedure insert_book (
      p_name  in varchar2,
      p_price in number)
    as 
    begin
      if price_check(p_price) = 'True' then
        insert into books (name, price)
        values (p_name, p_price);
      else
        dbms_output.put_line('가격은 0원 미만일 수 없습니다.');
      end if;
    end insert_book;
  
    function read_book_by_id (
      p_id in number
    )
      return sys_refcursor 
    as
      v_cursor sys_refcursor;
    begin
      open v_cursor for
        select name, price
        from books
        where id = p_id;

      return v_cursor;
    end read_book_by_id;
 
    procedure update_book_by_id (
      p_id    in number,
      p_name  in varchar2, 
      p_price in number)
    as
    begin
      update books
      set name = p_name,
          price = p_price
      where id = p_id;
    end update_book_by_id;

    procedure delete_book_by_id (
      p_id in number
    )
    as
    begin
      delete from books
      where id = p_id;
    end delete_book_by_id;

  end pack_books;
  /

  desc pack_books

    -------

  set serveroutput on

  truncate table books;

  exec pack_books.insert_book('자바 입문', 10000);
  exec pack_books.insert_book('데이터베이스 활용', -1000);

  select * from books;

  drop procedure insert_book;
  drop procedure update_book_by_id;
  drop function read_book_by_id;
  drop procedure delete_book_by_id ;

  select * from user_objects
  where object_type in ('PROCEDURE', 'FUNCTION', 'PACKAGE', 'PACKAGE BODY');
  
  select * from user_source
  where name = 'PACK_BOOKS';

